{"version":3,"sources":["components/Form.js","components/ToBuyItem.js","components/ToBuy.js","components/InCartItem.js","components/InCart.js","components/Empty.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleChange","evt","value","target","setState","newItem","handleSubmit","preventDefault","addItem","state","className","onSubmit","this","type","aria-describedby","placeholder","onChange","id","React","Component","ToBuyItem","onClick","onToggle","icon","faCheck","onDelete","faTrashAlt","ToBuy","ToBuyItems","items","map","item","key","InCartItem","faUndo","InCart","InCartItems","Empty","App","text","uuidv4","done","toggleItem","newState","handleDelete","window","confirm","filter","changeItem","toBuyItems","faListAlt","length","faShoppingCart","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d359972d.chunk.js","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: '',\n    };\n  }\n\n  handleChange = (evt) => {\n    const value = evt.target.value;\n    this.setState({ newItem: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.props.addItem(this.state.newItem);\n    this.setState({ newItem: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"mb-4\" onSubmit={this.handleSubmit}>\n        <div className=\"input-group mb-3 px-2\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            aria-describedby=\"button-addon2\"\n            placeholder=\"Enter an item\"\n            onChange={this.handleChange}\n            value={this.state.newItem}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              id=\"button-addon2\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst ToBuyItem = (props) => {\n  return (\n    <li className=\"border border-secondary rounded list-unstyled d-flex justify-content-between align-items-center mb-2\">\n      <span className=\"pl-3\">{props.value}</span>\n      <div className=\"buttons-container p-2\">\n        <button\n          className=\"btn btn-sm btn-outline-success mr-1\"\n          onClick={() => props.onToggle(props.id)}\n        >\n          <FontAwesomeIcon icon={faCheck} />\n        </button>\n        <button\n          className=\"btn btn-sm btn-outline-danger\"\n          onClick={() => props.onDelete(props.id)}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default ToBuyItem;\n","import React from 'react';\nimport ToBuyItem from './ToBuyItem';\n\nconst ToBuy = (props) => {\n  const ToBuyItems = props.items.map((item) => (\n    <ToBuyItem\n      key={item.id}\n      id={item.id}\n      value={item.value}\n      onToggle={() => props.onToggle(item.id)}\n      onDelete={props.onDelete}\n    />\n  ));\n\n  return (\n    <div>\n      <div className=\"m-2\">\n        <ul className=\"p-2\">{ToBuyItems}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ToBuy;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst InCartItem = (props) => {\n  return (\n    <li className=\"border border-secondary rounded list-unstyled d-flex justify-content-between align-items-center mb-2\">\n      <span className=\"pl-3\">\n        <del>{props.value}</del>\n      </span>\n      <div className=\"buttons-container p-2\">\n        <button\n          className=\"btn btn-sm btn-outline-secondary mr-1\"\n          onClick={() => props.onToggle(props.id)}\n        >\n          <FontAwesomeIcon icon={faUndo} />\n        </button>\n        <button\n          className=\"btn btn-sm btn-outline-danger\"\n          onClick={() => props.onDelete(props.id)}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default InCartItem;\n","import React from 'react';\nimport InCartItem from './InCartItem';\n\nconst InCart = (props) => {\n  const InCartItems = props.items.map((item) => (\n    <InCartItem\n      key={item.id}\n      id={item.id}\n      value={item.value}\n      onToggle={() => props.onToggle(item.id)}\n      onDelete={props.onDelete}\n    />\n  ));\n\n  return (\n    <div className=\"m-2\">\n      <ul className=\"p-2\">{InCartItems}</ul>\n    </div>\n  );\n};\n\nexport default InCart;\n","import React from 'react';\nconst Empty = () => {\n  return <p className=\" border border-info rounded m-2 p-2\">Empty</p>;\n};\n\nexport default Empty;\n","import React from 'react';\nimport Form from './components/Form';\nimport ToBuy from './components/ToBuy';\nimport InCart from './components/InCart';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faListAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\nimport Empty from './components/Empty';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n    };\n  }\n\n  addItem = (text) => {\n    const newItem = {\n      id: uuidv4(),\n      value: text,\n      done: false,\n    };\n    this.setState({ items: [...this.state.items, newItem] });\n  };\n\n  toggleItem = (id) => {\n    const newState = this.state.items.map((item) =>\n      item.id === id ? { ...item, done: !item.done } : item\n    );\n    this.setState({ items: newState });\n  };\n\n  handleDelete = (id) => {\n    const confirm = window.confirm('Are you sure that you want to delete?');\n    if (confirm) {\n      const newState = this.state.items.filter((item) => item.id !== id);\n      this.setState({ items: newState });\n    }\n  };\n\n  changeItem = (evt, id) => {\n    const newState = this.state.items.map((item) => {\n      const value = evt.target.value;\n      return item.id === id ? { ...item, value: value } : item;\n    });\n    this.setState({ items: newState });\n  };\n\n  render() {\n    const toBuyItems = this.state.items.filter((item) => item.done === false);\n    const InCartItems = this.state.items.filter((item) => item.done === true);\n\n    return (\n      <div className=\"App container-sm\">\n        <h1 className=\"my-3\">SHOPPING LIST</h1>\n        <Form addItem={this.addItem} />\n        <h4 className=\"text-left m-2\">\n          <FontAwesomeIcon icon={faListAlt} /> To Buy(\n          {toBuyItems.length})\n        </h4>\n        {toBuyItems.length === 0 ? (\n          <Empty />\n        ) : (\n          <ToBuy\n            items={toBuyItems}\n            onToggle={this.toggleItem}\n            onDelete={this.handleDelete}\n            changeItem={this.changeItem}\n          />\n        )}\n        <h4 className=\"text-left m-2\">\n          <FontAwesomeIcon icon={faShoppingCart} />\n          In Cart({InCartItems.length})\n        </h4>\n        {InCartItems.length === 0 ? (\n          <Empty />\n        ) : (\n          <InCart\n            items={InCartItems}\n            onToggle={this.toggleItem}\n            onDelete={this.handleDelete}\n            changeItem={this.changeItem}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}